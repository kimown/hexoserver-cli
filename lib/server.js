/**
 * Created by kimown on 16-7-10.
 */


'use strict';
const path = require('path');
const fs = require('fs');
var cp = require('child_process');


/**
 * call hexoserver in node_modules
 */
function server() {
    checkEnv().then((rootPath)=> {
        console.log("Starting server....");
        console.log(rootPath);
        var hexoServerPath = path.join(rootPath, 'node_modules', 'hexoserver');
        var hexoServer = require(path.join(hexoServerPath, "devServer.js"));
        hexoServer(rootPath);

    });


}


/**
 * check processing env
 */
function checkEnv() {

    let cwd = process.cwd();
    let rootPath;
    console.log(`查找目录${cwd}`)
    return findPackageJson(cwd).then((base)=> {
        return ensureBlogPath(base);
    }).then((blogPath)=> {
        rootPath = blogPath;
        return npmInstallDependency(blogPath);
    }).then((result)=> {
        return rootPath;
    }).catch((e)=> {
        console.error(e);
    });

}

/**
 * first time, install hexoserver as a denpendency automatically
 * if has installed ,skip this phase
 */
function npmInstallDependency(blogPath) {
    if (checkHasInstalledDependency(blogPath, 'hexoserver')) {
        //do nothing
        console.log('installed yet');
        return Promise.resolve('installed');
    } else {
        console.log("Install dependencies");
        let cmd = "npm install hexoserver --save";
        let option = {
            cwd: blogPath,
            stdio: 'inherit'
        };
        return spawn(cmd, option);
    }
}


function checkHasInstalledDependency(blogPath, dependency) {
    let pkgJson = require(path.join(blogPath, "package.json"));
    let dependencies = pkgJson.dependencies;
    if (dependencies.hasOwnProperty(dependency)) {
        return true;
    } else {
        return false;
    }


}

/**
 * ensure it is a real hexo blog dir
 */
function ensureBlogPath(base) {
    let pkgJson = require(path.join(base, "package.json"));
    if (typeof pkgJson.hexo === 'object') {
        return base
    } else {
        exitProcess(1);
    }
}

/**
 * find package.json file
 */
function findPackageJson(dir) {
    return fsStat(path.join(dir, "package.json")).then((path)=> {
        return dir;
    }).catch((err)=> {
        if (err && err.code === 'ENOENT') {
            let parentDir = path.dirname(dir);
            if (parentDir == dir) {
                exitProcess(0);
            }
            return findPackageJson(parentDir);
        }
    })
}

/**
 * promise wrapper
 */
function fsStat(dir) {
    return new Promise((resolve, reject)=> {
        fs.stat(dir, (err)=> {
            if (err) {
                reject(err);
            } else {
                resolve(dir);
            }
        })
    })

}


/**
 * promise wrapper
 * @param command
 * @param args
 * @param option
 */
function spawn(cmd, option) {
    let args = cmd.split(' ');
    let command = args.shift();
    return new Promise((resolve, reject)=> {
        let task = cp.spawn(command, args, option);

        task.on('close', (code) => {
            if (code == 0) {
                resolve("installed hexoserver finished");
            } else {
                exitProcess(2);
            }

        });

        task.on('error', (err)=> {
            exitProcess(2);
        });
    })


}


/**
 * exit process with tips
 */
function exitProcess(code) {
    switch (code) {
        case 0:
            console.error("ERROR:Can not find package.json.Please ensure you are in correct directory!!");
            break;
        case 1:
            console.error("Current directory is not a blog generated by hexo.Please ensure you are in correct directory");
            break;
        case 2:
            console.error("Failed to install dependencies. Please run ' npm install hexoserver --save ' manually!");
            break;
    }
    process.exit(1);
}


module.exports = server;
